[{"index":27,"type":0,"user":"小吉","timeStamp":1737442553191,"data":"你好啊 "},{"index":26,"type":0,"user":"2323","timeStamp":1737441518283,"data":"实打实打算\ndsds"},{"index":25,"type":0,"user":"2323","timeStamp":1737441504848,"data":"3343"},{"index":24,"type":0,"user":"添加1","timeStamp":1737430934632,"data":"import 'dart:async';\r\nimport 'dart:convert';\r\nimport 'dart:io';\r\n\r\nimport 'package:flutter/material.dart';\r\nimport 'package:flutter_easyloading/flutter_easyloading.dart';\r\nimport 'package:send_bot/git_manager.dart';\r\nimport 'package:send_bot/model.dart';\r\nimport 'package:send_bot/pages/chat_page.dart';\r\n\r\nclass ChatController extends ChangeNotifier {\r\n  final BuildContext context;\r\n  final RoomModel roomModel;\r\n  ChatController({\r\n    required this.context,\r\n    required this.roomModel,\r\n  }) {\r\n    _init();\r\n  }\r\n\r\n  bool isAutoRefresh = false;\r\n  List<MessageModel> dataList = [];\r\n  TextEditingController textEditingController = TextEditingController();\r\n  ScrollController scrollController = ScrollController();\r\n  bool isSending = false;\r\n  late File projectFile;\r\n\r\n  ///是否可以发送\r\n  bool get isCanSend =>\r\n      textEditingController.text.replaceAll(' ', '').isNotEmpty;\r\n  bool isPulling = false;\r\n  bool isPushing = false;\r\n\r\n  _init() {\r\n    ///先读本地的\r\n    // projectFile = File(roomModel.projectPath!);\r\n    // updateView();\r\n\r\n    _startTimer();\r\n\r\n  }\r\n\r\n  _startTimer() {\r\n    queryNewMessage();\r\n    Timer.periodic(Duration(seconds: 3), (_) {\r\n      if (isAutoRefresh) {\r\n        queryNewMessage();\r\n      }\r\n    });\r\n  }\r\n\r\n  bool isFirstLoading = true;\r\n  queryNewMessage({bool isShowLoading = false}) async {\r\n    if (isFirstLoading || isShowLoading) {\r\n      EasyLoading.show();\r\n      isFirstLoading = false;\r\n    }\r\n\r\n    try {\r\n      await onGitPullData(true);\r\n      EasyLoading.dismiss();\r\n    } catch (e) {\r\n      EasyLoading.showError(e.toString());\r\n      return;\r\n    }\r\n\r\n    projectFile = File(roomModel.projectPath! + '/json_data.json');\r\n    String content = projectFile.readAsStringSync();\r\n    String jsonStr = jsonEncode(dataList);\r\n    if (content == jsonStr) {\r\n      //和缓存中的一样就不再刷新\r\n      return;\r\n    }\r\n    print('content:$content');\r\n    if (content == '') {\r\n      dataList = [];\r\n    } else {\r\n      List list = jsonDecode(content);\r\n      dataList = list.map((e) {\r\n        return MessageModel.fromJson(e);\r\n      }).toList();\r\n    }\r\n    if (context.mounted) {\r\n      notifyListeners();\r\n      _scrollToBottom();\r\n    }\r\n  }\r\n\r\n  updateView() async {\r\n    // if (context.mounted) {\r\n    //   notifyListeners();\r\n    //   _scrollToBottom();\r\n    // }\r\n    projectFile = File(roomModel.projectPath! + '/json_data.json');\r\n    String content = projectFile.readAsStringSync();\r\n    // String jsonStr = jsonEncode(dataList);\r\n    // if (content == jsonStr) {\r\n    //   //和缓存中的一样就不再刷新\r\n    //   return;\r\n    // }\r\n    print('content:$content');\r\n    List list = jsonDecode(content);\r\n    dataList = list.map((e) {\r\n      return MessageModel.fromJson(e);\r\n    }).toList();\r\n    if (context.mounted) {\r\n      notifyListeners();\r\n      _scrollToBottom();\r\n    }\r\n  }\r\n\r\n  void _scrollToBottom() {\r\n    scrollController.animateTo(\r\n      0,\r\n      duration: Duration(milliseconds: 300),\r\n      curve: Curves.easeInOut,\r\n    );\r\n    print('滑动到最底部');\r\n  }\r\n\r\n  onSend() async {\r\n    if (isCanSend == false) {\r\n      return;\r\n    }\r\n    if (isPushing) {\r\n      return;\r\n    }\r\n    print('onSend');\r\n    String text = textEditingController.text;\r\n    MessageModel messageModel = MessageModel(\r\n        index: dataList.length,\r\n        type: 0,\r\n        user: roomModel.user,\r\n        timeStamp: DateTime.now().millisecondsSinceEpoch,\r\n        data: text,\r\n        isSending: true);\r\n    dataList.insert(0, messageModel);\r\n    isPushing = true;\r\n    textEditingController.clear();\r\n    notifyListeners();\r\n    _scrollToBottom();\r\n    try {\r\n      await onGitPullData(false);\r\n      //重新拉数据,保持最新数据\r\n      projectFile = File(roomModel.projectPath! + '/json_data.json');\r\n      String content = projectFile.readAsStringSync();\r\n      List list = jsonDecode(content);\r\n      List<MessageModel> tempList = list.map((e) {\r\n        return MessageModel.fromJson(e);\r\n      }).toList();\r\n      tempList.insert(0, messageModel);\r\n      if (tempList.length > 100) {\r\n        tempList.removeLast();\r\n      }\r\n      String jsonStr = jsonEncode(tempList);\r\n      //写到本地\r\n      await projectFile.writeAsString(jsonStr);\r\n      //推到远程\r\n      await onGitPushData();\r\n      messageModel.isSending = false;\r\n      dataList = tempList;\r\n      isPushing = false;\r\n      notifyListeners();\r\n    } catch (e) {\r\n      isPushing = false;\r\n      notifyListeners();\r\n      EasyLoading.showError(e.toString());\r\n    }\r\n  }\r\n\r\n  Future onGitPullData(bool isNeedUpdateView) async {\r\n    // isPulling = true;\r\n    // notifyListeners();\r\n    try {\r\n      await GitManager.pull(roomModel.projectPath!);\r\n      return;\r\n    } catch (e) {\r\n      print('error: onGitPullData, ${e.toString()}');\r\n      rethrow;\r\n    }\r\n  }\r\n\r\n  Future onGitPushData() async {\r\n    try {\r\n      await GitManager.add(\r\n        roomModel.projectPath!,\r\n      );\r\n      await GitManager.commit(roomModel.projectPath!, 'add message');\r\n      await GitManager.push(roomModel.projectPath!);\r\n      return;\r\n    } catch (e) {\r\n      print('error: onGitPullData, ${e.toString()}');\r\n      rethrow;\r\n    }\r\n  }\r\n\r\n  @override\r\n  void dispose() {\r\n    // TODO: implement dispose\r\n    textEditingController.dispose();\r\n    scrollController.dispose();\r\n    super.dispose();\r\n  }\r\n}\r\n"},{"index":23,"type":0,"user":"sdsd","timeStamp":1737430311624,"data":"大苏打"},{"index":22,"type":0,"user":"sdsd","timeStamp":1737430299030,"data":"得瑟得瑟"},{"index":21,"type":0,"user":"添加1","timeStamp":1737429909248,"data":"dfdf\ndd"},{"index":20,"type":0,"user":"添加1","timeStamp":1737429776749,"data":"            "},{"index":19,"type":0,"user":"添加1","timeStamp":1737429341495,"data":"dsdsd\ndsdsd\ndsdsd\ndsdsds\ndsdsdds"},{"index":18,"type":0,"user":"添加1","timeStamp":1737429320503,"data":"sdfsd "},{"index":17,"type":0,"user":"添加1","timeStamp":1737429288575,"data":"dsds\ndsd "},{"index":16,"type":0,"user":"添加1","timeStamp":1737429008610,"data":"年后dd得瑟得瑟大大大苏打\n大苏打\n\n\n\n\n"},{"index":15,"type":0,"user":"添加1","timeStamp":1737428406923,"data":"dsdsdsds"},{"index":14,"type":0,"user":"添加1","timeStamp":1737428382776,"data":""},{"index":13,"type":0,"user":"添加1","timeStamp":1737428367008,"data":"dsds"},{"index":12,"type":0,"user":"777","timeStamp":1737427592896,"data":"河水涛涛"},{"index":11,"type":0,"user":"添加1","timeStamp":1737427460204,"data":"你好的"},{"index":10,"type":0,"user":"777","timeStamp":1737427442955,"data":"呵呵呵"},{"index":9,"type":0,"user":"添加1","timeStamp":1737427404999,"data":"二位"},{"index":8,"type":0,"user":"777","timeStamp":1737427386291,"data":"快捷键"},{"index":7,"type":0,"user":"添加1","timeStamp":1737427323280,"data":"你好"},{"index":6,"type":0,"user":"添加1","timeStamp":1737096378725,"data":"据了解"},{"index":5,"type":0,"user":"添加1","timeStamp":1737096296456,"data":"鸟"},{"index":4,"type":0,"user":"dsdsddd","timeStamp":1737083927435,"data":"第三方"},{"index":3,"type":0,"user":"大苏打","timeStamp":1737082216416,"data":"打发打发"},{"index":2,"type":0,"user":"大苏打2323","timeStamp":1737020685711,"data":"撒旦"},{"index":1,"type":0,"user":"ddd","timeStamp":1737017009269,"data":""},{"index":0,"type":0,"user":"ddd","timeStamp":1737016948655,"data":"你好"}]